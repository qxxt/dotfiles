#!/usr/bin/env bash

display_help() {
    echo 'Create a scratch project
scratch [opt] [dirname]

opt:
--go     create go scratch
--c      create c scratch
--cpp    create c++ scratch'
}

if [ -z "$1" ] || [ "$1" == "--help" ]; then
    display_help
    exit 0
fi

if [ -z "$2" ]; then
    echo "error: no dirname"
    display_help
    exit 1
fi

go_scratch_dir="$HOME/scratch/go"
c_scratch_dir="$HOME/scratch/c"
cpp_scratch_dir="$HOME/scratch/cpp"
rust_scratch_dir="$HOME/scratch/rust"
go_template="package main\nimport \"fmt\"\n\nfunc main() {\n     fmt.Println(\"hello world\")\n}"
c_template='#include <stdio.h>\n\nint main() {\n    printf("hello world");\n    return 0;\n}'
cpp_template='#include <iostream>\n\nint main() {\n    std::cout << "Hello World!";\n    return 0;\n}'

scratch_name=$(echo "$2" | tr '[:upper:]' '[:lower:]' | sed -r 's/[[[:space:]]|\/]/\-/g')
scratch_dir=""
scratch_template=""
scratch_eval=""
scratch_file=""

case $1 in
    "--go")
        scratch_dir="$go_scratch_dir/$scratch_name"
        scratch_eval="go mod init '$scratch_name'"
        scratch_template="$go_template"
        scratch_file="main.go";;
    "--c")
        scratch_dir="$c_scratch_dir/$scratch_name"
        scratch_template="$c_template"
        scratch_file="main.c";;
    "--cpp")
        scratch_dir="$cpp_scratch_dir/$scratch_name"
        scratch_template="$cpp_template"
        scratch_file="main.cc";;
    "--rust")
        scratch_dir="$rust_scratch_dir/$scratch_name"
        scratch_eval="cargo init; scratch_dir="
        scratch_template=""
        scratch_file="/dev/null";;
    *)
        echo "error: unknown option $1"
        display_help
        exit 1;;
esac

mkdir "$scratch_dir" || (cd "$scratch_dir"; $SHELL)

cd "$scratch_dir"
[ "$scratch_eval" != "" ] && eval "$scratch_eval"
echo -e "$scratch_template" > "$scratch_dir/$scratch_file"
$SHELL
